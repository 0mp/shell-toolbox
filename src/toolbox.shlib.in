# Support functions for shell-toolbox (@PACKAGE_STRING@)
# For bug reports, see "@PACKAGE_BUGREPORT@"

_get_solaris_shells ()
{
    # Returns a list of valid Solaris 11.3 shells.  The list is taken
    # from the shells(4) manual and is shortened to only contain one
    # single instance of each shell.

    # Parameters:   none
    # stdin:        unused
    # stdout:       list of shells (one per line)

    cat <<END_LIST
/bin/bash
/bin/csh
/bin/jsh
/bin/ksh
/bin/ksh93
/bin/pfbash
/bin/pfcsh
/bin/pfksh
/bin/pfksh93
/bin/pfsh
/bin/pftcsh
/bin/pfzsh
/bin/sh
/bin/tcsh
/bin/zsh
END_LIST
}

toolbox_get_shells ()
{
    # Returns a list of installed shells.  The shells are validated
    # (it's made sure that they are executable files) before returned.

    # Rationale: OpenBSD and NetBSD can use "getent shells" to get a
    # list of shells, but this doesn't work on Ubuntu.  Solaris is a
    # problem since "getent shells" doesn't work and /etc/shells may not
    # exist.  The list of valid Solaris shells is instead taken from
    # the shells(4) manual on a vanilla Solaris 11.3 system.

    # Parameters:   none
    # stdin:        unused
    # stdout:       list of shells (one per line)

    # Try using "getent shells", if that fails, try parsing /etc/shells,
    # and if that fails, see if we're on Solaris and pass a predifined
    # list of shells.  Else fail.

    if ! command -p getent shells 2>/dev/null &&
       ! @GREP@ '^[^#]' /etc/shells 2>/dev/null
    then
        if [ "$( uname -s )" = "SunOS" ]; then
            _get_solaris_shells
        else
            echo 'Can not get list of shells!' >&2
            echo 'Please file a bug report at' >&2
            echo '@PACKAGE_BUGREPORT@' >&2
            exit 1
        fi
    fi |
    while read realshell; do
        if [ -x "$realshell" ]; then
            printf '%s\n' "$realshell"
        fi
    done
}


# vim: ft=sh
